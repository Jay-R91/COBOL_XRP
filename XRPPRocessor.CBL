IDENTIFICATION DIVISION.
PROGRAM-ID. XRP-PROCESSOR.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT BALANCE-FILE ASSIGN TO "balance.dat"
        ORGANIZATION IS LINE SEQUENTIAL
        ACCESS MODE IS SEQUENTIAL
        FILE STATUS IS FILE-STATUS.
    SELECT TRANSACTION-LOG ASSIGN TO "transactions.log"
        ORGANIZATION IS LINE SEQUENTIAL
        ACCESS MODE IS SEQUENTIAL
        FILE STATUS IS LOG-STATUS.

DATA DIVISION.
FILE SECTION.
FD BALANCE-FILE.
01 BALANCE-RECORD PIC X(7).  *> 7-character string for balance (e.g., "1000000")

FD TRANSACTION-LOG.
01 LOG-RECORD PIC X(80).

WORKING-STORAGE SECTION.
01 FILE-STATUS          PIC X(2).
01 LOG-STATUS           PIC X(2).
01 WS-BALANCE-CENTS     PIC 9(7) VALUE 0.  *> Default to 0 cents if not read
01 WS-BALANCE-DOLLARS   PIC 9(5)V99 VALUE 0.  *> Default to 0.00 if not read
01 WS-DISPLAY-BALANCE   PIC $ZZZ,ZZ9.99.  *> Formatted display field for balance
01 WS-DISPLAY-AMOUNT    PIC $ZZZ,ZZ9.99.  *> Formatted display field for amount
01 WS-RAW-BALANCE       PIC X(7).    *> Raw input from file
01 WS-BALANCE-STR       PIC X(7).    *> 7-character string
01 SENDER               PIC X(20).
01 RECEIVER             PIC X(20).
01 AMOUNT               PIC 9(5)V99. *> Transaction amount (e.g., 5.00)
01 WS-AMOUNT-CENTS      PIC 9(7).    *> Amount in cents (e.g., 500)
01 WS-AMOUNT-INPUT      PIC X(10).   *> Temporary field for raw input
01 WS-AMOUNT-VALID      PIC X(1) VALUE "N".  *> Flag for input validation
01 WS-NUM-CHECK          PIC X(10).   *> Temporary field for numeric check
01 WS-NUM-CHECK-INDEX    PIC 9(2).    *> Index for loop (0-10)
01 WS-ZERO-DISPLAY       PIC $ZZZ,ZZ9.99 VALUE "$      0.00".  *> Exact zero format
01 WS-CONTINUE           PIC X VALUE "Y".  *> For multi-transaction loop
01 WS-PASSWORD           PIC X(20).  *> For basic security
01 WS-LOG-ENTRY          PIC X(80).  *> For transaction log

PROCEDURE DIVISION.
MAIN-PROCEDURE SECTION.
    PERFORM INITIALIZE-BALANCE
    MOVE WS-BALANCE-DOLLARS TO WS-DISPLAY-BALANCE  *> Ensure display value is set
    DISPLAY "Enter password: "
    ACCEPT WS-PASSWORD WITH NO ECHO
    IF WS-PASSWORD NOT = "password123"  *> Replace with actual password logic
        DISPLAY "Invalid password."
        STOP RUN
    END-IF
    PERFORM UNTIL WS-CONTINUE NOT = "Y"
        PERFORM GET-INPUT
        PERFORM PROCESS-TRANSACTION
        DISPLAY "Continue transaction? (Y/N): "
        ACCEPT WS-CONTINUE
    END-PERFORM
    STOP RUN.

INITIALIZE-BALANCE SECTION.
    MOVE 0 TO WS-BALANCE-CENTS
    OPEN INPUT BALANCE-FILE
    IF FILE-STATUS = "00"
        READ BALANCE-FILE INTO WS-RAW-BALANCE
            AT END
                CONTINUE
            NOT AT END
                MOVE FUNCTION NUMVAL(WS-RAW-BALANCE) TO WS-BALANCE-CENTS
                IF WS-BALANCE-CENTS = 0 OR WS-BALANCE-CENTS > 9999999
                    MOVE 9130 TO WS-BALANCE-CENTS
                END-IF
        END-READ
        CLOSE BALANCE-FILE
    ELSE IF FILE-STATUS = "35"
        CLOSE BALANCE-FILE
        OPEN OUTPUT BALANCE-FILE
        MOVE 9130 TO WS-BALANCE-CENTS
        MOVE WS-BALANCE-CENTS TO WS-BALANCE-STR
        MOVE WS-BALANCE-STR TO BALANCE-RECORD
        WRITE BALANCE-RECORD
        CLOSE BALANCE-FILE
    ELSE
        STOP RUN
    END-IF
    COMPUTE WS-BALANCE-DOLLARS = WS-BALANCE-CENTS / 100
    MOVE WS-BALANCE-DOLLARS TO WS-DISPLAY-BALANCE.

GET-INPUT SECTION.
    IF WS-DISPLAY-BALANCE = WS-ZERO-DISPLAY AND WS-BALANCE-DOLLARS = 0
        COMPUTE WS-BALANCE-DOLLARS = WS-BALANCE-CENTS / 100
        MOVE WS-BALANCE-DOLLARS TO WS-DISPLAY-BALANCE
    END-IF
    DISPLAY "Read balance: " WS-DISPLAY-BALANCE
    DISPLAY "Current Balance: " WS-DISPLAY-BALANCE
    DISPLAY "Enter sender name: "
    ACCEPT SENDER
    DISPLAY "Enter receiver name: "
    ACCEPT RECEIVER
    DISPLAY "Enter amount to send: "
    ACCEPT WS-AMOUNT-INPUT
    MOVE WS-AMOUNT-INPUT TO WS-NUM-CHECK
    PERFORM VARYING WS-NUM-CHECK-INDEX FROM 1 BY 1 UNTIL WS-NUM-CHECK-INDEX > 10
        IF WS-NUM-CHECK(WS-NUM-CHECK-INDEX:1) NOT = SPACE AND
           WS-NUM-CHECK(WS-NUM-CHECK-INDEX:1) NOT = "." AND
           WS-NUM-CHECK(WS-NUM-CHECK-INDEX:1) IS NOT NUMERIC
            MOVE "Y" TO WS-AMOUNT-VALID
            EXIT PERFORM
        END-IF
    END-PERFORM
    IF WS-AMOUNT-VALID = "N"
        MOVE FUNCTION NUMVAL-C(WS-AMOUNT-INPUT) TO AMOUNT
    END-IF.

PROCESS-TRANSACTION SECTION.
    IF WS-AMOUNT-VALID = "Y"
        DISPLAY "Invalid amount entered. Must be a number."
        STOP RUN
    ELSE
        COMPUTE WS-AMOUNT-CENTS = AMOUNT * 100
        IF WS-AMOUNT-CENTS > WS-BALANCE-CENTS
            DISPLAY "Insufficient funds. Transaction cancelled."
        ELSE
            SUBTRACT WS-AMOUNT-CENTS FROM WS-BALANCE-CENTS
            COMPUTE WS-BALANCE-DOLLARS = WS-BALANCE-CENTS / 100
            DISPLAY "From: " SENDER
            DISPLAY "To: " RECEIVER
            MOVE AMOUNT TO WS-DISPLAY-AMOUNT
            DISPLAY "Amount: " WS-DISPLAY-AMOUNT
            MOVE WS-BALANCE-DOLLARS TO WS-DISPLAY-BALANCE
            DISPLAY "New Balance: " WS-DISPLAY-BALANCE
            MOVE WS-BALANCE-CENTS TO WS-BALANCE-STR
            MOVE WS-BALANCE-STR TO BALANCE-RECORD
            CLOSE BALANCE-FILE
            OPEN OUTPUT BALANCE-FILE
            WRITE BALANCE-RECORD
            CLOSE BALANCE-FILE
            DISPLAY "Transaction sent successfully!"
            PERFORM LOG-TRANSACTION
        END-IF
    END-IF.

LOG-TRANSACTION SECTION.
    OPEN EXTEND TRANSACTION-LOG
    STRING "Transaction: From " SENDER " To " RECEIVER " Amount " WS-DISPLAY-AMOUNT " New Balance " WS-DISPLAY-BALANCE
           DELIMITED BY SIZE INTO WS-LOG-ENTRY
    MOVE WS-LOG-ENTRY TO LOG-RECORD
    WRITE LOG-RECORD
    CLOSE TRANSACTION-LOG.

END PROGRAM XRP-PROCESSOR.
